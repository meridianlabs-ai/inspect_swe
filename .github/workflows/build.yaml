name: Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      - "release/**"
  workflow_dispatch:

jobs:
  py-ruff:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]
    steps:
      - uses: actions/checkout@v4
      - name: Lint with Ruff
        uses: chartboost/ruff-action@v1
      - name: Format with Ruff
        uses: chartboost/ruff-action@v1
        with:
          args: "format --check"

  py-mypy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt', '**/pyproject.toml') }}-${{ matrix.python-version }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install .[dev]
      - name: Install development version of inspect_ai
        run: |
          # Install the development version of inspect_ai from GitHub
          python -m pip install git+https://github.com/UKGovernmentBEIS/inspect_ai.git@main
      - name: Run mypy
        run: |
          mypy src --python-executable $(which python)

  py-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt', '**/pyproject.toml') }}-${{ matrix.python-version }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install .[dev]
      - name: Install development version of inspect_ai
        run: |
          # Install the development version of inspect_ai from GitHub
          python -m pip install git+https://github.com/UKGovernmentBEIS/inspect_ai.git@main
      - name: Run tests
        run: pytest

  py-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install build
      - name: Install development version of inspect_ai
        run: |
          # Install the development version of inspect_ai from GitHub
          python -m pip install git+https://github.com/UKGovernmentBEIS/inspect_ai.git@main
      - name: Build package
        run: python -m build
      - name: Verify package
        run: |
          python -m pip install dist/*.whl
          python -c "import inspect_swe; print('Package imported successfully')"
