---
title: "Inspect SWE"
subtitle: Software Engineering Agents for Inspect AI
---

## Overview

The `inspect_swe` package makes software engineering agents like [Claude Code](https://docs.anthropic.com/en/docs/claude-code/overview) available as standard Inspect [Agents](https://inspect.aisi.org.uk/agents.html). For example, here we use the `claude_code()` agent as the solver in an Inspect task:

``` python
from inspect_ai import Task, task
from inspect_ai.dataset import json_dataset
from inspect_ai.scorer import model_graded_qa

from inspect_swe import claude_code

@task
def system_explorer() -> Task:
    return Task(
        dataset=json_dataset("dataset.json"),
        solver=claude_code(),
        scorer=model_graded_qa(),
        sandbox="docker",
    )
```

Inspect SWE agents are implemented using the Inspect [`sandbox_agent_bridge()`](https://inspect.aisi.org.uk/agent-bridge.html#sandbox-bridge).

Agents run inside the sample sandbox and their model API calls are proxied back to Inspect. This means that you can use any model with Inspect SWE agents, and that features like token or time limits and log transcripts work as normal with the agents.

## Getting Started

Install the `inspect-swe` package with:

``` bash
pip install inspect-swe
```

Then, try out one or more of the available agents:

| Agent | Description |
|------------------------------------|------------------------------------|
| [`claude_code()`](claude_code.qmd) | Anthropic's agentic coding tool [Claude Code](https://docs.anthropic.com/en/docs/claude-code/overview) |

: {tbl-colwidths=\[30,70\]}